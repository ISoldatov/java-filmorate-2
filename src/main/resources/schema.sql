DROP ALL OBJECTS;
--DROP TABLE IF EXISTS users cascade;
--DROP TABLE IF EXISTS friends;
--DROP TABLE IF EXISTS films cascade;
--DROP TABLE IF EXISTS likes;
--DROP TABLE IF EXISTS mpa;
--DROP TABLE IF EXISTS genres cascade;
--DROP TABLE IF EXISTS film_genre;

CREATE TABLE users (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	email varchar NOT NULL, 
	login varchar NOT NULL,
	name  varchar,
	birthday Date NOT NULL 
);

CREATE TABLE friends (
	id_user INTEGER NOT NULL REFERENCES users (id),
	id_friend INTEGER NOT NULL REFERENCES users (id),
	accept BOOLEAN DEFAULT FALSE,
	CONSTRAINT friends_pk PRIMARY KEY (id_user, id_friend)
);

CREATE TABLE mpa (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	title varchar
);

CREATE TABLE films (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar NOT NULL, 
	description varchar(200),	
	release_date Date NOT NULL,
	duration INTEGER,
	mpa INTEGER NOT NULL REFERENCES mpa (id),
	CONSTRAINT constr_duration CHECK (duration>0)
);

CREATE TABLE likes (
	id_film INTEGER NOT NULL REFERENCES films (id),
	id_user INTEGER NOT NULL REFERENCES users (id),
	CONSTRAINT likes_pk PRIMARY KEY (id_film, id_user)
);

CREATE TABLE genres (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar
);

CREATE TABLE film_genre (
	id_film INTEGER NOT NULL REFERENCES films (id),
	id_genre INTEGER NOT NULL REFERENCES genres (id),
	CONSTRAINT film_genre_pk PRIMARY KEY (id_film, id_genre)
);


